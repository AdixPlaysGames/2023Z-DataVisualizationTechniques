p
atp_ranking <- read.csv("https://raw.githubusercontent.com/JeffSackmann/tennis_atp/master/atp_rankings_10s.csv") %>%
left_join(atpPlayers, by = c("player" = "player_id")) %>%
filter(height > 160) %>%
mutate(age = as.integer(substr(ranking_date, 1, 4)) - as.integer(substr(dob, 1, 4)) + (as.integer(substr(ranking_date, 5, 6)) - as.integer(substr(dob, 5, 6)))/12) %>%
mutate(rank = case_when(
rank <= 10 ~ "top 10",
TRUE ~ "others"
))
age_plot <- ggdensity(atp_ranking, x = "age",
add = "mean", rug = TRUE,
color = "rank", fill = "rank",
palette = c("#00AFBB", "#E7B800"))
age_plot
p <- ggboxplot(atp_ranking, x = "rank", y = "height",
color = "rank", palette =c("#00AFBB", "#E7B800"),
shape = "rank")
p
library(shiny)
library(palmerpenguins)
library(ggplot2)
library(plotly)
library(bslib)
library(dplyr)
data("penguins")
ui <- fluidPage(
titlePanel("Analiza danych o pingwinach"),
fluidRow(
column(6,
),
column(6,
)
),
fluidRow(
column(6,
plotlyOutput("pointPlot")
),
column(6,
plotlyOutput("histPlot")
)
),
fluidRow(
column(6,
tableOutput("table")
)
)
)
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app_start.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app11.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app11.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app11.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app11.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app11.R')
runApp('R/2023Z-DataVisualizationTechniques/labs/lab8/app11.R')
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")))
library(shiny)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggrepel)
library(shinycssloaders)
library(PogromcyDanych)
set.seed(123)
df <- na.omit(auta2012) %>% dplyr::sample_frac(0.01)
server <- function(input, output, session) {
## wykres zależności między mocą a ceną samochodu
## w zależności od rodzaju paliwa, liczby drzwi, skrzyni biegów
output$pointPlot <- renderPlot({
ggplot(df %>% rename(color = input$color),
aes(x = Cena.w.PLN, y = KM, color = color)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
theme_bw() +
labs(
x = "Cena [PLN]",
y = "Moc [KM]",
color = input$color,
title = "Samochody: moc vs cena"
)
})
}
ui1 <- fluidPage(titlePanel("Samochody: moc vs cena"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "color",
label = "Parametr:",
choices = c(
"Rodzaj paliwa" = "Rodzaj.paliwa",
"Liczba drzwi" = "Liczba.drzwi",
"Skrzynia biegow" = "Skrzynia.biegow"
)
),
width = 3
),
mainPanel(plotOutput("pointPlot"),
width = 9)
))
ui <- shiny::navbarPage("zakladki",
tabPanel("Panel1", ui1),
tabPanel("Panel2", ui2))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")))
ui <- shiny::navbarPage("zakladki",
tabPanel("Panel1", ui1),
tabPanel("Panel2", ui2))
runApp(shinyApp(ui, server))
https://github.com/rstudio/bslib
install.packages("bslib")
install.packages("bslib")
install.packages("bslib")
library(bslib)
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"))
library(shiny)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggrepel)
library(shinycssloaders)
library(bslib)
library(PogromcyDanych)
set.seed(123)
df <- na.omit(auta2012) %>% dplyr::sample_frac(0.01)
server <- function(input, output, session) {
## wykres zależności między mocą a ceną samochodu
## w zależności od rodzaju paliwa, liczby drzwi, skrzyni biegów
output$pointPlot <- renderPlot({
ggplot(df %>% rename(color = input$color),
aes(x = Cena.w.PLN, y = KM, color = color)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
theme_bw() +
labs(
x = "Cena [PLN]",
y = "Moc [KM]",
color = input$color,
title = "Samochody: moc vs cena"
)
})
}
ui1 <- fluidPage(titlePanel("Samochody: moc vs cena"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "color",
label = "Parametr:",
choices = c(
"Rodzaj paliwa" = "Rodzaj.paliwa",
"Liczba drzwi" = "Liczba.drzwi",
"Skrzynia biegow" = "Skrzynia.biegow"
)
),
width = 3
),
mainPanel(plotOutput("pointPlot"),
width = 9)
))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"))
runApp(shinyApp(ui, server))
?bootswatch_themes
bootswatch_themes()
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "pulse"))
runApp(shinyApp(ui, server))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
runApp(shinyApp(ui, server))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(),
mainPanel(
shiny::markdown(
"Potrzebujemy \n czegos"
)
)
))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
runApp(shinyApp(ui, server))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(
sliderInput("sliderYear", "rok",
min(df$Rok.produkcji), max(df$Rok.produkcji),
value = c(1980, 2007),
step = 1)),
mainPanel(
shiny::markdown(
"Potrzebujemy \n czegos"
)
)
))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
runApp(shinyApp(ui, server))
library(shiny)
library(dplyr)
library(ggplot2)
library(dplyr)
library(ggrepel)
library(shinycssloaders)
library(bslib)
library(PogromcyDanych)
set.seed(123)
df <- na.omit(auta2012) %>% dplyr::sample_frac(0.01)
ggplot(df1, aes(x= factor(Rok.produkcji),
y = Cena.w.PLN),
geom_boxplot())
server <- function(input, output, session) {
## wykres zależności między mocą a ceną samochodu
## w zależności od rodzaju paliwa, liczby drzwi, skrzyni biegów
output$pointPlot <- renderPlot({
ggplot(df %>% rename(color = input$color),
aes(x = Cena.w.PLN, y = KM, color = color)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
theme_bw() +
labs(
x = "Cena [PLN]",
y = "Moc [KM]",
color = input$color,
title = "Samochody: moc vs cena"
)
})
output$boxPlot <- renderPlotly({
df1 <- df %>%
filter(species %in% input$choiceBox,
Rok.produkcji <= input$sliderYear[2],
Rok.produkcji >= input$sliderYear[1])
ggplot(df1, aes(x= factor(Rok.produkcji),
y = Cena.w.PLN),
geom_boxplot())
})
}
ui1 <- fluidPage(titlePanel("Samochody: moc vs cena"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "color",
label = "Parametr:",
choices = c(
"Rodzaj paliwa" = "Rodzaj.paliwa",
"Liczba drzwi" = "Liczba.drzwi",
"Skrzynia biegow" = "Skrzynia.biegow"
)
),
width = 3
),
mainPanel(plotOutput("pointPlot"),
width = 9)
))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(
sliderInput("sliderYear", "rok",
min(df$Rok.produkcji), max(df$Rok.produkcji),
value = c(1980, 2007),
step = 1),
plotlyOutput("boxPlot")),
mainPanel(
shiny::markdown(
"Potrzebujemy \n czegos"
)
)
))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(
sliderInput("sliderYear", "rok",
min(df$Rok.produkcji), max(df$Rok.produkcji),
value = c(1980, 2007),
step = 1),
plotlOutput("boxPlot")),
mainPanel(
shiny::markdown(
"Potrzebujemy \n czegos"
)
)
))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(
sliderInput("sliderYear", "rok",
min(df$Rok.produkcji), max(df$Rok.produkcji),
value = c(1980, 2007),
step = 1),
plotOutput("boxPlot")),
mainPanel(
shiny::markdown(
"Potrzebujemy \n czegos"
)
)
))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
runApp(shinyApp(ui, server))
server <- function(input, output, session) {
## wykres zależności między mocą a ceną samochodu
## w zależności od rodzaju paliwa, liczby drzwi, skrzyni biegów
output$pointPlot <- renderPlot({
ggplot(df %>% rename(color = input$color),
aes(x = Cena.w.PLN, y = KM, color = color)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
theme_bw() +
labs(
x = "Cena [PLN]",
y = "Moc [KM]",
color = input$color,
title = "Samochody: moc vs cena"
)
})
output$boxPlot <- renderPlot({
df1 <- df %>%
filter(Rok.produkcji <= input$sliderYear[2],
Rok.produkcji >= input$sliderYear[1])
ggplot(df1, aes(x= factor(Rok.produkcji),
y = Cena.w.PLN),
geom_boxplot())
})
}
ui1 <- fluidPage(titlePanel("Samochody: moc vs cena"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "color",
label = "Parametr:",
choices = c(
"Rodzaj paliwa" = "Rodzaj.paliwa",
"Liczba drzwi" = "Liczba.drzwi",
"Skrzynia biegow" = "Skrzynia.biegow"
)
),
width = 3
),
mainPanel(plotOutput("pointPlot"),
width = 9)
))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(
sliderInput("sliderYear", "rok",
min(df$Rok.produkcji), max(df$Rok.produkcji),
value = c(1980, 2007),
step = 1)),
mainPanel(
plotOutput("boxPlot")
)
))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
runApp(shinyApp(ui, server))
server <- function(input, output, session) {
## wykres zależności między mocą a ceną samochodu
## w zależności od rodzaju paliwa, liczby drzwi, skrzyni biegów
output$pointPlot <- renderPlot({
ggplot(df %>% rename(color = input$color),
aes(x = Cena.w.PLN, y = KM, color = color)) +
geom_point() +
scale_y_log10() +
scale_x_log10() +
theme_bw() +
labs(
x = "Cena [PLN]",
y = "Moc [KM]",
color = input$color,
title = "Samochody: moc vs cena"
)
})
output$boxPlot <- renderPlot({
df1 <- df %>%
filter(Rok.produkcji <= input$sliderYear[2],
Rok.produkcji >= input$sliderYear[1])
ggplot(df1, aes(x= factor(Rok.produkcji),
y = Cena.w.PLN)) +
geom_boxplot()
})
}
ui1 <- fluidPage(titlePanel("Samochody: moc vs cena"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "color",
label = "Parametr:",
choices = c(
"Rodzaj paliwa" = "Rodzaj.paliwa",
"Liczba drzwi" = "Liczba.drzwi",
"Skrzynia biegow" = "Skrzynia.biegow"
)
),
width = 3
),
mainPanel(plotOutput("pointPlot"),
width = 9)
))
ui2 <- fluidPage((titlePanel("Rozkład ceny samochodów w zależności od roku produkcji")),
sidebarLayout(
sidebarPanel(
sliderInput("sliderYear", "rok",
min(df$Rok.produkcji), max(df$Rok.produkcji),
value = c(1980, 2007),
step = 1)),
mainPanel(
plotOutput("boxPlot")
)
))
ui <- shiny::navbarPage("Analiza",
tabPanel("Wstepna analiza", ui1),
tabPanel("Analiza", ui2),
theme = bs_theme(bootswatch = "cosmo"),
footer = shiny::HTML("
<footer class='text-center text-sm-start' style='width:100%;'>
<hr>
<p class='text-center' style='font-size:12px;'>
© 2021 Copyright:
<a class='text-dark' href='https://www.mi2.ai/'>MI2</a>
</p>
</footer>
"))
runApp(shinyApp(ui, server))
shiny::runApp('R/2023Z-DataVisualizationTechniques/homeworks/hw5/RybakCezary')
